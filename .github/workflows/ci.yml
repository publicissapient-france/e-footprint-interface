name: Django CI

on: ["push", "workflow_dispatch"]

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Set up Python 3
              uses: actions/setup-python@v5
              with:
                  python-version: 3.10.12

            - name: Install Dependencies
              run: |
                  python -m pip install --user pipx
                  pipx install poetry
                  poetry install

            - name: Create .env file
              run: |
                  echo DJANGO_PROD=False >> .env
                  echo SECRET_KEY=ci_secret_key >> .env

            - name: Run migrations
              run: |
                  poetry run python manage.py makemigrations
                  poetry run python manage.py migrate

            - name: Run Tests
              run: poetry run python manage.py test

            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20.8.1
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: E2E Tests
              uses: cypress-io/github-action@v6
              id: e2e-tests
              with:
                  browser: firefox
                  config-file: cypress-test.config.ts
                  start: npm start

            - name: Generate test report
              id: generate-e2e-report
              if: always() && steps.e2e-tests.outcome == 'failure'
              run: |
                  mkdir cypress/screenshots || true
                  npx mochawesome-merge ./cypress/results/mochawesome-report/*.json > tests-report.json
                  npx marge tests-report.json -o cypress/reports/html
                  cp -r cypress/screenshots cypress/reports/html/screenshots

            - name: Upload Cypress report
              uses: actions/upload-artifact@v4
              if: always() && steps.generate-e2e-report.outcome == 'success'
              with:
                  name: Cypress report
                  path: cypress/reports/html


    deploy-gcp:
        needs: "build"
        if: github.ref_name == 'main'
        runs-on: ubuntu-latest

        env:
            TAG: ${{ secrets.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/eu.gcr.io/${{ secrets.SERVICE }}

        permissions:
            contents: 'read'
            id-token: 'write'

        steps:
            -   uses: actions/checkout@v4

            -   name: Login to GCP
                id: auth
                uses: 'google-github-actions/auth@v2.1.3'
                with:
                    token_format: 'access_token'
                    project_id: ${{ secrets.PROJECT_ID }}
                    workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
                    service_account: ${{ secrets.SERVICE_ACCOUNT }}

            -   name: Docker Auth
                id: docker-auth
                uses: 'docker/login-action@v3'
                with:
                    username: 'oauth2accesstoken'
                    password: '${{ steps.auth.outputs.access_token }}'
                    registry: '${{ secrets.GAR_LOCATION }}-docker.pkg.dev'

            -   name: Build and Push Container
                run: |-
                    docker build -t e-footprint-interface .
                    docker tag e-footprint-interface ${{ env.TAG }}
                    docker push ${{ env.TAG }}

            -   name: Deploy to Cloud Run
                uses: google-github-actions/deploy-cloudrun@v2.6.0
                with:
                    service: ${{ secrets.SERVICE }}
                    region: ${{ secrets.REGION }}
                    image: ${{ env.TAG }}:latest
